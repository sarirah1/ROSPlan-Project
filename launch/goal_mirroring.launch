<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_path"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p0/5_goals/complex_agriculture_domain.pddl" />
	<!-- <arg name="domain_path"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/simple_harpia_dataset/p0/5_goals/domain.pddl" /> -->

	<!-- For LPG planner this will be in test -->
	<arg name="problem_path"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/common/problem.pddl" />


	<!-- <arg name="problem_path"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/common/problem_pulverize_3_regions.pddl" /> -->
	<arg name="data_path"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/common/" />
	<!-- <arg name="data_path"            value="$(find rosplan_planning_system)/test/" /> -->
    <arg name="action_dispatch_topic"	default="/rosplan_plan_dispatcher/action_dispatch" />
	<arg name="action_feedback_topic"	default="/rosplan_plan_dispatcher/action_feedback" />
	<arg name="hypothesis_goals"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p4/8_goals/hyps.dat" />
	<arg name="temp_observations"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p4/8_goals/temp_obs.dat" />
	<arg name="observations"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p4/8_goals/obs.dat" />
	<arg name="initial_state"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p4/5_goals/initial_state.pddl" />
	<arg name="log_file"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p4/8_goals/goal_mirroring_log_file_popf.txt" />
	<!-- <arg name="log_file"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p2/5_goals/goal_mirroring_log_file_metric_ff.txt" /> -->
	<arg name="real_goal"	default="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p4/8_goals/real_hyp.dat" />



    <!-- main coordinator -->
    <node pkg="rosplan_project" type="Goal_Mirroring.py" name="coordinator" respawn="false" required="false" output="screen">
        <!-- <param name="max_prm_size"    value="$(arg max_prm_size)" /> -->
        <param name="planner_command" value="timeout 60 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
        <!-- <param name="planner_command" value="timeout 300 $(find rosplan_planning_system)/common/bin/Metric-FF -o DOMAIN -f PROBLEM" /> -->
        <param name="domain_path"     value="$(arg domain_path)" />
        <param name="problem_path"    value="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/common/problem.pddl" />

        <param name="data_path"       value="$(arg data_path)" />
		<param name="hypothesis_goals"       value="$(arg hypothesis_goals)" />
		<param name="temp_observations"       value="$(arg temp_observations)" />
		<param name="observations"       value="$(arg observations)" />
		<param name="initial_state"       value="$(arg initial_state)" />
		<param name="log_file"       value="$(arg log_file)" />
		<param name="real_goal"       value="$(arg real_goal)" />
    </node>

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_path)" />
		<param name="problem_path" value="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/dataset_agriculture/p4/5_goals/initial_state.pddl" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>

	<!-- problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="knowledge_base"   value="rosplan_knowledge_base" />
		<arg name="domain_path"      value="$(arg domain_path)" />
		<arg name="problem_path"     value="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/common/problem.pddl" />
		<arg name="problem_topic"    value="problem_instance" />
	</include>

	<!-- planner interface -->
	<!-- <include file="$(find rosplan_planning_system)/launch/includes/planner_interface_ff_metric.launch"> -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="use_problem_topic"    value="true" />
		<arg name="problem_topic"        value="/rosplan_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="planner_output" />
		<arg name="domain_path"          value="$(arg domain_path)" />
		<arg name="problem_path"         value="/mnt/c/Users/Public/ROSPlan/src/rosplan/rosplan_project/common/problem.pddl" />
		<arg name="data_path"            value="$(arg data_path)" />
		<arg name="planner_command"      value="timeout 60 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
		<!-- <arg name="planner_command"      value="timeout 300 $(find rosplan_planning_system)/common/bin/Metric-FF -o DOMAIN -f PROBLEM" /> -->
		<!-- <arg name="planner_command"      value="timeout 100 /mnt/c/Users/Public/LPG-td-1.4/lpg-td -o DOMAIN -f PROBLEM -n 5 -out lpgplan" /> -->

	</include>

    <!-- plan parsing -->
	<node name="rosplan_parsing_interface" pkg="rosplan_planning_system" type="pddl_simple_plan_parser" respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="planner_topic"  value="/rosplan_planner_interface/planner_output" />
		<param name="plan_topic"     value="complete_plan" />
	</node>

	<!-- plan dispatching -->
	<node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system" type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
		<param name="knowledge_base"        value="rosplan_knowledge_base" />
		<param name="plan_topic"            value="/rosplan_parsing_interface/complete_plan" />
		<param name="action_dispatch_topic" value="action_dispatch" />
		<param name="action_feedback_topic" value="action_feedback" />
	</node>


    <!-- sim actions -->
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="feed_livestock" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="gather_produce" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="harvest_crop" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="water_crop" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="drop_crop_in_box" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="recharge_battery_ground" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="drop_produce_in_box" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="recharge_food_amount" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="take_image" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="recharge_water_amount" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="move_robot" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="go_to" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="pulverize_region" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="recharge_battery" />
	</include>
    <include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="recharge_input" />
	</include>

</launch>